namespace = nda_eap #  Edgar Allen Poe 

# Masque of the Red Death
# https://www.gutenberg.org/files/1064/1064-h/1064-h.htm

nda_eap.10 = { # The initial outbreak - (Baltimore) direct from Poe Death event.
	type = country_event
	placement = p:x0E3435
	title = nda_eap.10.t
	desc = nda_eap.10.d
	flavor =  nda_eap.10.f

	event_image = {
		video = "unspecific_sick_in_hospital"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	cooldown = { days = 740 }

	immediate = {
		debug_log = "Red Death Begins - Baltimore"

		set_global_variable = nda_poe_red_death

		p:x0E3435 = { 
			state = { 	
				# stop running multiple times
				if = {
					limit = { NOT = { has_variable = nda_poe_red_death_state } }

					state_region = {
						start_harvest_condition = nda_red_death	
						debug_log = "Red Death Begins - Harvest Condition applied"
						every_scope_state = { # is region wide so set for all states
							set_variable = nda_poe_red_death_state						
						}
					}					
				}
			} 
		}
	}	
	
	option = {
		name = nda_eap.10.a
		default_option = yes
	}
	# options to treat / lockdown the state
}

# spread to neighbouring state - like the Herbert West Reanimated, but allow escape abroad if trade route?
nda_eap.11 = { # The plague spreads - non visible watcher but fire off event if qualified.
	type = country_event
	hidden = yes
	
	trigger = { 
		has_global_variable = nda_poe_red_death
		any_scope_state = { state_region = { has_harvest_condition = nda_red_death } }
		game_date <= 1853.10.1 # 4 years of the Red Death should be enough
	}

	immediate = {	
		debug_log = "Red death spreads : country: [THIS.GetCountry.GetNameNoFormatting]"
		save_scope_as = scope_spread_source	
		random_scope_state = {
			limit = {
				state_region = { has_harvest_condition = nda_red_death }
			}
			save_scope_as = scope_spread_source_state
			random_neighbouring_state = { # possible to spread to other country
				limit = {
					NOT = { state_region = { has_harvest_condition = nda_red_death } }
					# don't revisit state (could hit same state_Region?)
					NOT = { has_variable = nda_poe_red_death_state }
					owner = { 
						coa_def_native_american_trigger = no # reverse uno - don't hit native americans
						coa_def_african_trigger = no
					} 
				}

				# if previously hit reduce chance of spread - will not prevent secondary waves
				
				debug_log = "Red death spreads : [THIS.GetState.GetNameNoFormatting] from [PREV.GetState.GetNameNoFormatting]"
				trigger_event = { id = nda_eap.12 }	# fire main event						
				save_scope_as = scope_spread_state				
			}			
		}	
		debug_log_scopes = yes
		# if it hasn't spread by going neighbouring then see if it can jump elsewhere
		if = {
			limit = { NOT = { exists = scope:scope_spread_state } }
			debug_log = "Red death spreads : no scope_spread_state"
			debug_log_scopes = yes
			random_state = { # don't limit to same country but use weights to keep it local or to countries in same market
				limit = {
					NOT = { state_region = { has_harvest_condition = nda_red_death } }	
					# don't revisit state (could hit same state_Region?)
					NOT = { has_variable = nda_poe_red_death_state }
					is_coastal = yes # presume it came in by sea	
					owner = { 
						coa_def_native_american_trigger = no 
						coa_def_african_trigger = no
					} # reverse uno - don't hit native americans		
					# OR = { 
					# 	owner = { num_mutual_trade_route_levels_with_country:root > 0 }	
					# 	market = scope:scope_spread_source.market		
					# }
				}
				# will this work?
				weight = {
					base = 0
					# straight 'add' does not work?
					#add = 10		#  num_mutual_trade_route_levels_with_country:root		
					modifier = {
						# is in same country - spread via coastal routes
						owner = scope:scope_spread_source
						has_building = building_port
						add = 500
					}
					# modifier = { # spreads over seas via trade
					# 	owner = { num_mutual_trade_route_levels_with_country:root > 0 }
					# 	has_building = building_port
					# 	add = 20
					# 	# not a usable value	- have to do case??
					# 	#add = num_mutual_trade_route_levels_with_country:root
					# }
					# modifier = { # spreads over seas via trade
					# 	owner = { num_mutual_trade_route_levels_with_country:root > 5 }
					# 	has_building = building_port
					# 	add = 100
					# }
					modifier = { # In same market
						market = scope:scope_spread_source.market
						add = 50
					}
					modifier = { # Is unincorporated - try and stop spread to minor
						is_incorporated = no
						add = -50
					}
					modifier = { # Don't punish smaller countries too much
						owner = { country_rank <= rank_value:insignificant_power}
						add = -50
					}
				}
				# if previously hit reduce chance of spread - will not prevent secondary waves
				
				debug_log = "Red death spreads by jump : [THIS.GetState.GetNameNoFormatting] from [PREV.GetCountry.GetNameNoFormatting]"
				trigger_event = { id = nda_eap.12 }	# fire main event						
				save_scope_as = scope_spread_state

			}			
		}
	}
}

nda_eap.12 = { # The plague spreads
	type = state_event
	placement = ROOT
	title = nda_eap.12.t
	
	desc = 	{
		first_valid = {
			triggered_desc = {
				trigger = { # from overseas
					NOT = { scope:red_death_state_scope.owner = scope:scope_spread_source_state.owner }
					NOT = { scope:red_death_state_scope.owner = { any_neighbouring_state = { THIS =  scope:scope_spread_source_state }  } }
				}
				desc = nda_eap.12.d2
			}			
			triggered_desc = {
				trigger = { # across border
					NOT = { scope:red_death_state_scope.owner = scope:scope_spread_source_state.owner }
				}
				desc = nda_eap.12.d1
			}
			desc = nda_eap.12.d
		}
	}
	flavor =  nda_eap.12.f

	duration = 3

	event_image = {
		video = "unspecific_sick_in_hospital"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	immediate = {
		state_region = {
			start_harvest_condition = nda_red_death

			every_scope_state = { # is region wide so set for all states
				set_variable = nda_poe_red_death_state						
			}
		}

		save_scope_as = red_death_state_scope

	}	
	
	option = { #" A tragic event"
		name = nda_eap.12.a
		default_option = yes
	}
}

nda_eap.13 = { # Masque of the Red Death
	type = country_event
	placement = ROOT
	title = nda_eap.13.t
	desc = nda_eap.13.d
	flavor =  nda_eap.13.f

	duration = 3

	event_image = {
		video = "unspecific_sick_in_hospital"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	trigger = {

		has_global_variable = nda_poe_red_death
		NOT = { has_variable = nda_poe_red_death_masque }

		any_scope_state = {
			is_capital = yes							
			
			state_region = {
				has_harvest_condition = nda_red_death				
			}
		}
	}

	immediate = {

		set_variable = nda_poe_red_death_masque			

		random_scope_state = {
			limit = {
				is_capital = yes					
			}
					
			save_scope_as = red_death_state_scope	
			
			kill_population_percent_in_state = { percent = 0.1 strata = rich }	
			
			# kill off a powerful leader?? Or make them sickly? Have a separate event to decide?				
		}
	}	
	
	option = { #" A tragic event"
		name = nda_eap.13.a

		scope:red_death_state_scope = {
			# kill off some wealthy pops
			# need tooltip
			custom_tooltip = nda_eap.13.a_tt
		
		}

		default_option = yes
	}
}

nda_eap.14 = { # Red Death Redemption - post Red Death Spiritualist boost
	type = country_event
	placement = ROOT
	title = nda_eap.14.t
	desc = nda_eap.14.d
	flavor =  nda_eap.14.f

	duration = 3

	event_image = {
		video = "unspecific_sick_in_hospital"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	trigger = {

		game_date >= 1854.10.1 # allow 5 years after initial Red Death
		game_date < 1856.10.1

		NOT = {
			any_scope_state = { # Red Death is finished in country
				state_region = {
					has_harvest_condition = nda_red_death				
				}
			}		
		}
		any_scope_state = {  
			has_variable = nda_poe_red_death_state
		}
	}

	cooldown = { days = 740 }

	immediate = {

	}	
	
	option = { # Ignore for minor boost
		name = nda_eap.14.a
		default_option = yes

		every_scope_state = {
			limit = { has_variable = nda_poe_red_death_state }
			if = {
				limit = { NOT = { has_variable = nda_rel_boost_spiritualism }}					
				set_variable = { # ongoing conversion
					name = nda_rel_boost_spiritualism						
					months = 12
					value = nda_trivial_conversion
				}		
			
			}
		}
	}

	option = { # Promote for major boost
		name = nda_eap.14.b

		every_scope_state = {
			limit = { has_variable = nda_poe_red_death_state }
			if = {
				limit = { NOT = { has_variable = nda_rel_boost_spiritualism }}					
				set_variable = { # ongoing conversion
					name = nda_rel_boost_spiritualism						
					months = 12
					value = nda_small_conversion
				}		
			
			}
		}
	}

	option = { # supress
		name = nda_eap.14.c

	}
}

nda_eap.15 = { # Turn Away - post Inqusition Spiritualist boost
	type = country_event
	placement = ROOT
	title = nda_eap.15.t
	desc = { 
		first_valid = {
		triggered_desc = {
			trigger = { # from overseas
				 has_local_variable = is_spiritualism
			}
			desc = nda_eap.15.ds
		}			
		desc = nda_eap.15.da
		}
	}
	flavor =  nda_eap.15.f

	duration = 3

	event_image = {
		video = "southamerica_christianity"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	trigger = {

		has_variable = nda_inqusition_terror_known
		has_variable = nda_inqusition_closed

		not = { has_variable = nda_inqusition_aftermath }
	
		any_state = {
			NOT = { has_variable = nda_rel_boost_spiritualism  }
		}
	}

	cooldown = { days = 740 }

	immediate = {
		set_variable = nda_inqusition_aftermath

		# Set options based on if Spiritulism active
		if = { 
			limit = { game_date >= 1848.4.1 }
			set_local_variable = is_spiritualism
		 }
	}	
	
	option = { # Ignore for minor boost
		name = nda_eap.15.a
		default_option = yes

		custom_tooltip = nda_eap.15.a_tt
		if = { limit = { has_local_variable = is_spiritualism}

			every_scope_state = {
				limit = { NOT = { has_variable = nda_rel_boost_spiritualism } }
						
				set_variable = { # ongoing conversion
					name = nda_rel_boost_spiritualism						
					months = 12
					value = nda_trivial_conversion
				}					
			}		
		}
	}

	option = { # Promote for major boost
		name = nda_eap.15.b
		
		custom_tooltip = nda_eap.15.b_tt
		if = { limit = { has_local_variable = is_spiritualism}

			every_scope_state = {
				limit = { has_variable = nda_rel_boost_spiritualism }
					
				set_variable = { # ongoing conversion
					name = nda_rel_boost_spiritualism						
					months = 12
					value = nda_small_conversion
				}		
			}
		}
	}

	option = { # 
		name = nda_eap.15.c
		custom_tooltip = nda_eap.15.c_tt

	}
}